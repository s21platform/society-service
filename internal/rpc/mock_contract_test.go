// Code generated by MockGen. DO NOT EDIT.
// Source: contract.go

// Package rpc is a generated GoMock package.
package rpc

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/s21platform/society-service/internal/model"
)

// MockDbRepo is a mock of DbRepo interface.
type MockDbRepo struct {
	ctrl     *gomock.Controller
	recorder *MockDbRepoMockRecorder
}

// MockDbRepoMockRecorder is the mock recorder for MockDbRepo.
type MockDbRepoMockRecorder struct {
	mock *MockDbRepo
}

// NewMockDbRepo creates a new mock instance.
func NewMockDbRepo(ctrl *gomock.Controller) *MockDbRepo {
	mock := &MockDbRepo{ctrl: ctrl}
	mock.recorder = &MockDbRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDbRepo) EXPECT() *MockDbRepoMockRecorder {
	return m.recorder
}

// CreateSociety mocks base method.
func (m *MockDbRepo) CreateSociety(socData *model.SocietyData) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSociety", socData)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateSociety indicates an expected call of CreateSociety.
func (mr *MockDbRepoMockRecorder) CreateSociety(socData interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSociety", reflect.TypeOf((*MockDbRepo)(nil).CreateSociety), socData)
}

// GetCountSocietyWithOffset mocks base method.
func (m *MockDbRepo) GetCountSocietyWithOffset(data *model.WithOffsetData) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCountSocietyWithOffset", data)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCountSocietyWithOffset indicates an expected call of GetCountSocietyWithOffset.
func (mr *MockDbRepoMockRecorder) GetCountSocietyWithOffset(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCountSocietyWithOffset", reflect.TypeOf((*MockDbRepo)(nil).GetCountSocietyWithOffset), data)
}

// GetSocietyWithOffset mocks base method.
func (m *MockDbRepo) GetSocietyWithOffset(data *model.WithOffsetData) (*[]model.SocietyWithOffsetData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSocietyWithOffset", data)
	ret0, _ := ret[0].(*[]model.SocietyWithOffsetData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSocietyWithOffset indicates an expected call of GetSocietyWithOffset.
func (mr *MockDbRepoMockRecorder) GetSocietyWithOffset(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSocietyWithOffset", reflect.TypeOf((*MockDbRepo)(nil).GetSocietyWithOffset), data)
}
